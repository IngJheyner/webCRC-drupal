{#
/**
 * @file
 * Theme override to display a node.
 *
 * Available variables:
 * - node: The node entity with limited access to object properties and methods.
 *   Only method names starting with "get", "has", or "is" and a few common
 *   methods such as "id", "label", and "bundle" are available. For example:
 *   - node.getCreatedTime() will return the node creation timestamp.
 *   - node.hasField('field_example') returns TRUE if the node bundle includes
 *     field_example. (This does not indicate the presence of a value in this
 *     field.)
 *   - node.isPublished() will return whether the node is published or not.
 *   Calling other methods, such as node.delete(), will result in an exception.
 *   See \Drupal\node\Entity\Node for a full list of public properties and
 *   methods for the node object.
 * - label: (optional) The title of the node.
 * - content: All node items. Use {{ content }} to print them all,
 *   or print a subset such as {{ content.field_example }}. Use
 *   {{ content|without('field_example') }} to temporarily suppress the printing
 *   of a given child element.
 * - author_picture: The node author user entity, rendered using the "compact"
 *   view mode.
 * - metadata: Metadata for this node.
 * - date: (optional) Themed creation date field.
 * - author_name: (optional) Themed author name field.
 * - url: Direct URL of the current node.
 * - display_submitted: Whether submission information should be displayed.
 * - attributes: HTML attributes for the containing element.
 *   The attributes.class element may contain one or more of the following
 *   classes:
 *   - node: The current template type (also known as a "theming hook").
 *   - node--type-[type]: The current node type. For example, if the node is an
 *     "Article" it would result in "node--type-article". Note that the machine
 *     name will often be in a short form of the human readable label.
 *   - node--view-mode-[view_mode]: The View Mode of the node; for example, a
 *     teaser would result in: "node--view-mode-teaser", and
 *     full: "node--view-mode-full".
 *   The following are controlled through the node publishing options.
 *   - node--promoted: Appears on nodes promoted to the front page.
 *   - node--sticky: Appears on nodes ordered above other non-sticky nodes in
 *     teaser listings.
 *   - node--unpublished: Appears on unpublished nodes visible only to site
 *     admins.
 * - title_attributes: Same as attributes, except applied to the main title
 *   tag that appears in the template.
 * - content_attributes: Same as attributes, except applied to the main
 *   content tag that appears in the template.
 * - author_attributes: Same as attributes, except applied to the author of
 *   the node tag that appears in the template.
 * - title_prefix: Additional output populated by modules, intended to be
 *   displayed in front of the main title tag that appears in the template.
 * - title_suffix: Additional output populated by modules, intended to be
 *   displayed after the main title tag that appears in the template.
 * - view_mode: View mode; for example, "teaser" or "full".
 * - teaser: Flag for the teaser state. Will be true if view_mode is 'teaser'.
 * - page: Flag for the full page state. Will be true if view_mode is 'full'.
 * - readmore: Flag for more state. Will be true if the teaser content of the
 *   node cannot hold the main body content.
 * - logged_in: Flag for authenticated user status. Will be true when the
 *   current user is a logged-in member.
 * - is_admin: Flag for admin user status. Will be true when the current user
 *   is an administrator.
 *
 * @see template_preprocess_node()
 *
 * @todo Remove the id attribute (or make it a class), because if that gets
 *   rendered twice on a page this is invalid CSS for example: two lists
 *   in different view modes.
 */
#}
{%
  set classes = [
    'node projects__regulatory',
    'node--type-' ~ node.bundle|clean_class,
    node.isPromoted() ? 'node--promoted',
    node.isSticky() ? 'node--sticky',
    not node.isPublished() ? 'node--unpublished',
    view_mode ? 'node--view-mode-' ~ view_mode|clean_class,
  ]
%}

<article{{ attributes.addClass(classes) }}>

  <section class="projects__regulatory-header container-fluid p-0 bg-white pt-5 pb-3">

    <div class="container">

    
      <h2 class="title font-weight-bold display-4">
        {{ label.0 }}
      </h2>

      {{ drupal_breadcrumb() }}

    </div>

  </section>

  <section class="projects__regulatory-content py-5">

    <div{{ content_attributes.addClass('node__content container px-0') }}>

      {# ===== ===== ITEMS INFO ===== ===== #}
      <div class="node__content-info d-flex mb-2">

        {# ===== ===== STATE ===== ===== #}
        <div class="node__content-info--items state pr-3">

          {%
            set info_state = {
              'icon' : content.field_estado_proyectos.0['#markup'] == 'Abierto' ? '/themes/custom/webcrc/src/images/proyecto-abierto.svg' : '/themes/custom/webcrc/src/images/proyecto-finalizado.svg',
              'text' : content.field_estado_proyectos.0['#markup'] == 'Abierto' ? 'open Project'|trans : 'finished Project'|trans
            }
          %}         
          
        <img src="{{ info_state.icon }}"></img> {{ info_state.text }}          

        </div>

        {# ===== ===== SERVICES ===== ===== #}
        <div class="node__content-info--items services px-3">         
          {{ content.field_projects_services }}
        </div>

        {# ===== ===== Tomar la fecha de cierre de la ultima interaccion ===== ===== #}
        {% if content.field_estado_proyectos.0['#markup'] == 'Abierto' %}
          {% for key, value in node.field_interacciones_proyectos %}
            {% if loop.last %}
              {% set dateClose = content.field_interacciones_proyectos[key]['#paragraph'].field_fecha_cierre_iteracciones.value %}
              {# ===== ===== DATE COMMENTS ===== ===== #}
              <div class="node__content-info--items date-comments px-3">
                <img src="/themes/custom/webcrc/src/images/aceptan-comentarios.svg"> {{ 'Comments are accepted until'|t }} {{ dateClose|date('d/M/Y') }}
              </div>
            {% endif %}
          {% endfor %}
        {% endif %}     

      </div>
      {# ===== ===== TITLE PROJECTS ===== ===== #}
      <h1 class="node__content-title">{{ content.field_nombre_proyecto.0 }}</h1>

      {# ===== ===== RESUMEN Y MECANISMOS DE PARTICIPACION E INTERACCIONES ===== ===== #}
      <div class="row">    
        <div class="col-8">

          {# ===== ===== TIPO DE PROYECTO ===== ===== #}
          {{ content.field_tipo_proyecto}}
          <hr class="my-3">

          {# ===== ===== RESUMEN ===== ===== #}
          <div class="node__content-abstract">
            {{ content.field_resumen_proyecto }}
            
          </div>

          <hr>

          {# ===== ===== INTERACCIONES ===== ===== #}
          <div class="node__content-interactions">

            <h3>{{ 'Interactions'|t }}</h3>

            {{ content.field_interacciones_proyectos }} 
            
          </div> 
               
        </div>

        {# ===== ===== MECANISMOS DE PARTICIPACION ===== ===== #}
        <div class="col-4 node__content-mechanisms">

          <ul class="list-group">

            <li class="list-group-item active font-weigth-bold text-center"><i class="fas fa-inbox text-white"></i> {{ 'Mechanisms for participation'|trans }}</li>
            <li class="list-group-item node__content-mechanisms--email pt-3 pb-1"><img src="/themes/custom/webcrc/src/images/email.svg"><u class="text mx-2 font-weight-bold">{{ content.field_email_proyectos.0 }}</u></li>
            <li class="list-group-item node__content-mechanisms--enlaces py-1">            
              {{ content.field_enlaces_proyectos }}
            </li>
            <li class="list-group-item node__content-mechanisms--email pt-0 pb-3"><img src="/themes/custom/webcrc/src/images/Direccion.svg"><u class="text mx-2 font-weight-bold">{{ content.field_oficina_proyecto.0 }}</u></li>
            
          </ul>

        </div>

      </div>

    </div>

  </section>

  <section class="projects__regulatory-related">
  </section>  

</article>
